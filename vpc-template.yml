AWSTemplateFormatVersion: 2010-09-09

Description: This template builds a VPC and is used for the following templates: alb.yml, natgateway.yml
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: VPC CIDR
        Parameters:
          - VpcCIDR
      - Label:
          default: Subnet CIDR's
        Parameters:
          - PublicSubnetCIDR
          - PublicSubnet2CIDR
          - PrivateSubnetCIDR
Parameters:
  VpcCIDR:
    Default: 10.0.0.0/16
    Description: Please enter the IP range for this VPC
    Type: String
  PublicSubnetCIDR:
    Default: 10.0.0.0/24
    Description: Please enter the IP range for the public subnet
    Type: String
  PublicSubnet2CIDR:
    Default: 10.0.1.0/24
    Description: Please enter the IP range for the public subnet
    Type: String
  PrivateSubnetCIDR:
    Default: 10.0.2.0/24
    Description: Please enter the IP range for the private subnet
    Type: String
Resources:
  TheVpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: The VPC
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: IGW
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref TheVpc
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref TheVpc
      Tags:
        - Key: Name
          Value: Public Subnet

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref TheVpc
      Tags:
        - Key: Name
          Value: Public Subnet 2
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref TheVpc
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      VpcId: !Ref TheVpc
      Tags:
        - Key: Name
          Value: 'Private Subne{t'
  ALBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP/HTTPS access on port 80/443
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      VpcId: !Ref TheVpc
      Tags:
        - Key: Name
          Value: ALB Security Group
  SSHSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SSH Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref TheVpc
      Tags:
        - Key: Name
          Value: SSH Security Group
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP/HTTPS access via port 80/443
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref ALBSecurityGroup
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref SSHSecurityGroup
      VpcId: !Ref TheVpc
      Tags:
        - Key: Name
          Value: WebServer Security Group
Outputs:
  VPC:
    Description: VPC ID
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
    Value: !Ref TheVpc
  PublicSubnet:
    Description: Public Subnet ID
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet'
    Value: !Ref PublicSubnet
  PublicSubnet2:
    Description: Public Subnet 2 ID
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2'
    Value: !Ref PublicSubnet2
  PrivateSubnet:
    Description: Private Subnet ID
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet'
    Value: !Ref PrivateSubnet
  ALBSecurityGroup:
    Description: ALB Security Group ID
    Export:
      Name: !Sub '${AWS::StackName}-ALBSecurityGroup'
    Value: !Ref ALBSecurityGroup
  SSHSecurityGroup:
    Description: SSH Security Group ID
    Export:
      Name: !Sub '${AWS::StackName}-SSHSecurityGroup'
    Value: !Ref SSHSecurityGroup
  WebServerSecurityGroup:
    Description: WebServer Security Group ID
    Export:
      Name: !Sub '${AWS::StackName}-WebServerSecurityGroup'
    Value: !Ref WebServerSecurityGroup
