AWSTemplateFormatVersion: "2010-09-09"

Description: This template creates an Application Load Balancer requires the "vpc temlate" and "natgateway template"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Certificate ARN"
          Paramters:
            - AcmCertificate
      -
        Label:
          default: "Export VPC Stack Name"
          Paramters:
            - ExportVpcStackName
Paramters:
  AcmCertificate:
    Description: The ARN of the AWS Certification Manager's Certificate
    Type: String

  ExportVpcStackName:
    Description: The name of the stack that provisions the VPC
    Type: String


Resources:
  #Create an Application Load Balancer
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalance
    Properties:
      Name: MyApplicationLoadBalancer
      SecurityGroups:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-ALBSecurityGroup
      Subnets:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PublicSubnet

  #Create listener on port 80
  ALBListenerNoSSLCertificate:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - RedirectConfig:
          Host: '#{host}'
          Path: '/#{path}'
          Port: '443'
          Protocol: HTTPS
          StatusCode: HTTP_301
        Type: redirect
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  #Create a Listener on Port 443
  ALBListenerSSLCertificate:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: !Ref AcmCertificate
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS

  #Create a Target Group
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200, 302
      Name: MyWebServers
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-VPC

Outputs:
  #Export Target Group
  ALBTargetGroup:
    Description: Webserver target group
    Export:
      Name: !Sub ${AWS::StackName}-ALBTargetGroup
    Value: !Ref ALBTargetGroup

  #Export ApplicationLoadBalancer
  ApplicationLoadBalancerDnsName:
    Description: Application load balancer DNS Name
    Export:
      Name: !Sub ${AWS::StackName}-ApplicationLoadBalancerDnsName
    Value: !GetAtt ApplicationLoadBalancer.DNSName

  #Export Application Load Balancer Zone ID
  ApplicationLoadBalancerZoneID:
    Description: Application Load Balancer Canonical Hosted Zone ID
    Export:
      Name: !Sub ${AWS::StackName}-ApplicationLoadBalancerZoneID
    Value: !GetAtt ApplicationLoadBalancer.CanonicalHostedZoneID
